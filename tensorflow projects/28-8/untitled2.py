# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1if556-G1Ay7-BjE3Q8x8ZERkJIS_np_w
"""

import tensorflow as tf 
from tensorflow.keras import datasets, layers, models
import matplotlib.pyplot as plt 
import numpy as np

(x_train,y_train),(x_test,y_test) = datasets.cifar10.load_data()

x_train.shape

plt.imshow(x_train[8])

classes = ['airplane','car','bird','cat','deer','dog','frog','horse','ship','truck']

len(classes)

x_train[0]

x_train = x_train/255.0
x_test = x_test/255.0

cnn = tf.keras.models.Sequential([
    layers.Conv2D(filters=32, kernel_size=(3,3), activation='relu', input_shape=(32,32,3)),
    layers.MaxPooling2D((2,2)),
    layers.Conv2D(filters=64, kernel_size=(3,3), activation='relu'),
    layers.MaxPooling2D((2,2)),
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(32, activation='relu'),
    layers.Dense(10, activation='softmax')
])

cnn.compile(optimizer='adam',
            loss='sparse_categorical_crossentropy',
            metrics=['accuracy'])

cnn.fit(x_train,y_train, epochs=10)

cnn.evaluate(x_test,y_test)

y_preds = cnn.predcit(x_test)

test_img = 0
p = y_preds[test_img]
index = np.argmax(p)
print(classes[index])
plt.imshow(x_test[test_img])



